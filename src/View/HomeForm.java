/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.ChatClient;
import Model.Group;
import Model.Message;
import Model.User;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author duydo
 */
public class HomeForm extends javax.swing.JFrame {

    /**
     * Creates new form HomeForm
     */
    public User user = new User();
    DefaultTableModel modelGroup;
    DefaultTableModel modelMessage;
    ArrayList<Group> listGroup = new ArrayList<>();
    ArrayList<Message> listMessage = new ArrayList<>();
    int groupID;
    public HomeForm() throws IOException, ClassNotFoundException{
        initComponents();
        this.setLocationRelativeTo(null);
        modelGroup = (DefaultTableModel) tblGroup.getModel();
        modelMessage = (DefaultTableModel) tblMessage.getModel();
        btnPersonInfo.setIcon(new ImageIcon(this.getClass().getResource("/resources/person.png")));
        btnCreateGroup.setIcon(new ImageIcon(this.getClass().getResource("/resources/add.png")));
        btnEditGroup.setIcon(new ImageIcon(this.getClass().getResource("/resources/edit.png")));
        btnDeleteGroup.setIcon(new ImageIcon(this.getClass().getResource("/resources/delete.png")));
        btnSendFile.setIcon(new ImageIcon(this.getClass().getResource("/resources/file.png")));
        btnEditMessage.setIcon(new ImageIcon(this.getClass().getResource("/resources/edit.png")));
        btnDeleteMessage.setIcon(new ImageIcon(this.getClass().getResource("/resources/delete.png")));
        btnEditMember.setIcon(new ImageIcon(this.getClass().getResource("/resources/add-member.png")));
        tblMessage.setShowGrid(false);
    }
    public void showTableGroup(int userID) throws IOException, ClassNotFoundException{
        ChatClient client = new ChatClient();
        listGroup = client.requestGetListGroup(userID);
        while(modelGroup.getRowCount()!=0){
            modelGroup.removeRow(0);
        }
        for(Group g:listGroup){
            modelGroup.addRow(new Object[]{
                g.getName()
            });
        }
        client.close();
    }
    public void showTableMessage() throws IOException, ClassNotFoundException{
        ChatClient client = new ChatClient();
        listMessage = client.requestListMessage(groupID);
        while(modelMessage.getRowCount()!=0){
            modelMessage.removeRow(0);
        }
        for(Message m:listMessage){
            if(m.getUserID() == this.user.getId()){
                modelMessage.addRow(new Object[]{
                    "", m.getContent()==null ? m.getFileName(): m.getContent()
                });
            }
            else{
                modelMessage.addRow(new Object[]{
                    m.getContent()==null ? m.getName()+": "+m.getFileName(): m.getName()+": "+m.getContent(), "" 
                });
            }
        }
        client.close();
    }
    public void deleteContentTableMessage(){
        while(modelMessage.getRowCount()!=0){
            modelMessage.removeRow(0);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblGroup = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMessage = new javax.swing.JTable();
        btnSend = new javax.swing.JButton();
        txtContent = new javax.swing.JTextField();
        btnEditGroup = new javax.swing.JButton();
        btnDeleteGroup = new javax.swing.JButton();
        btnCreateGroup = new javax.swing.JButton();
        btnSendFile = new javax.swing.JButton();
        btnEditMessage = new javax.swing.JButton();
        btnDeleteMessage = new javax.swing.JButton();
        btnPersonInfo = new javax.swing.JButton();
        btnEditMember = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        tblGroup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGroup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGroupMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblGroup);
        if (tblGroup.getColumnModel().getColumnCount() > 0) {
            tblGroup.getColumnModel().getColumn(0).setResizable(false);
        }

        tblMessage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMessage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMessageMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblMessage);
        if (tblMessage.getColumnModel().getColumnCount() > 0) {
            tblMessage.getColumnModel().getColumn(0).setResizable(false);
            tblMessage.getColumnModel().getColumn(1).setResizable(false);
        }

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnEditGroup.setText(" ");
        btnEditGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditGroupActionPerformed(evt);
            }
        });

        btnDeleteGroup.setText(" ");
        btnDeleteGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteGroupActionPerformed(evt);
            }
        });

        btnCreateGroup.setText(" ");
        btnCreateGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateGroupActionPerformed(evt);
            }
        });

        btnSendFile.setText(" ");
        btnSendFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendFileActionPerformed(evt);
            }
        });

        btnEditMessage.setText(" ");
        btnEditMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditMessageActionPerformed(evt);
            }
        });

        btnDeleteMessage.setText(" ");
        btnDeleteMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMessageActionPerformed(evt);
            }
        });

        btnPersonInfo.setText(" ");
        btnPersonInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonInfoActionPerformed(evt);
            }
        });

        btnEditMember.setText(" ");
        btnEditMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditMemberActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPersonInfo)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCreateGroup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditGroup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteGroup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditMember))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtContent)
                        .addGap(26, 26, 26)
                        .addComponent(btnSend)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSendFile)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditMessage)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteMessage))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPersonInfo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditGroup)
                    .addComponent(btnDeleteGroup)
                    .addComponent(btnCreateGroup)
                    .addComponent(btnEditMember))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSendFile)
                    .addComponent(btnEditMessage)
                    .addComponent(btnDeleteMessage))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateGroupActionPerformed
        String groupName = JOptionPane.showInputDialog("Enter group name: ");
        if(groupName!=null){
            int memberID = Integer.parseInt(JOptionPane.showInputDialog("Enter an ID of user you want to chat with: "));
            Message message1 = new Message();
            message1.setUserID(user.getId());
            message1.setGroupID(0);
            Message message2 = new Message();
            message2.setUserID(memberID);
            message2.setGroupID(0);
            Group group = new Group();
            group.setName(groupName);
            group.setLeaderID(user.getId());
            try {
                ChatClient client = new ChatClient();
                if(client.requestCreateGroup(group)){
                    client.requestSendMessage(message1);
                    client.requestSendMessage(message2);
                    showTableGroup(user.getId());
                }
                client.close();
            } catch (IOException | ClassNotFoundException ex) {
            }
        }
        
        
    }//GEN-LAST:event_btnCreateGroupActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        String content = txtContent.getText();
        Message mess = new Message();
        mess.setUserID(user.getId());
        mess.setGroupID(groupID);
        mess.setContent(content);
        mess.setName(user.getName());
        try {
            ChatClient client = new ChatClient();
            if(client.requestSendMessage(mess)){
                txtContent.setText("");
                showTableMessage();
            }
            client.close();
        } catch (IOException | ClassNotFoundException ex) {
        }
        
        
    }//GEN-LAST:event_btnSendActionPerformed

    private void tblGroupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGroupMouseClicked
        int row = tblGroup.getSelectedRow();
        groupID = listGroup.get(row).getId();
        try {
            ChatClient client = new ChatClient();
            listMessage = client.requestListMessage(groupID);
            showTableMessage();
            client.close();
        } catch (IOException | ClassNotFoundException ex) {
        }
        
    }//GEN-LAST:event_tblGroupMouseClicked

    private void btnDeleteGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteGroupActionPerformed
        int row = tblGroup.getSelectedRow();
        int leaderID = listGroup.get(row).getLeaderID();
        if(leaderID==user.getId()){
            try {
                ChatClient client = new ChatClient();
                if(client.requestDeleteGroup(groupID)){
                showTableGroup(user.getId());
                client.close();
            }
            } catch (IOException | ClassNotFoundException ex) {
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Only leader can delete groups");
        }
    }//GEN-LAST:event_btnDeleteGroupActionPerformed

    private void btnDeleteMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMessageActionPerformed
        int row = tblMessage.getSelectedRow();
        int userID = listMessage.get(row).getUserID();
        if(userID==user.getId()){
            int messID = listMessage.get(row).getId();
            try {
                ChatClient client = new ChatClient();
                if(client.requestDeleteMessage(messID)){
                    showTableMessage();
                }
                client.close();
            } catch (IOException ex) {
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "You can only delete your messages");
        }
    }//GEN-LAST:event_btnDeleteMessageActionPerformed

    private void tblMessageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMessageMouseClicked
        int row = tblMessage.getSelectedRow();
        if(listMessage.get(row).getContent()==null){
            int confirm = JOptionPane.showConfirmDialog(this, "Do you want to download this file?", "Confirm", JOptionPane.OK_CANCEL_OPTION);
            if(confirm == JOptionPane.OK_OPTION){
                JFileChooser fc = new JFileChooser();
                fc.setDialogTitle("Choose folder:");
                fc.setCurrentDirectory(new java.io.File("."));
                if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
                    String destination = fc.getSelectedFile().toString();
                    FileOutputStream fos;
                    try {
                        fos = new FileOutputStream(new File(destination));
                        fos.write(listMessage.get(row).getFileContent());
                        fos.close();
                    } catch (FileNotFoundException ex) {
                    } catch (IOException ex) {
                    }
                    
                }
                
            }
        }
    }//GEN-LAST:event_tblMessageMouseClicked

    private void btnEditMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditMessageActionPerformed
        int row = tblMessage.getSelectedRow();
        int userID = listMessage.get(row).getUserID();
        if(listMessage.get(row).getContent()==null){
            JOptionPane.showMessageDialog(this, "Cannot edit this message");
        }
        else if(userID==user.getId()){
            int messID = listMessage.get(row).getId();
            String content = listMessage.get(row).getContent();
            if(row!=-1)
                content = JOptionPane.showInputDialog(" ", content);
            try {
                ChatClient client = new ChatClient();
                if(client.requestEditMessage(messID, content)){
                    showTableMessage();
                }
                client.close();
            } catch (IOException ex) {
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "You can only edit your messages");
        }
    }//GEN-LAST:event_btnEditMessageActionPerformed

    private void btnPersonInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonInfoActionPerformed
        PersonalInfoForm pf = new PersonalInfoForm();
        try {
            pf.setUser(user);
            pf.setVisible(true);
        } catch (ParseException ex) {
            Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnPersonInfoActionPerformed

    private void btnEditGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditGroupActionPerformed
        int row = tblGroup.getSelectedRow();
        Group group = listGroup.get(row);
        String groupName = JOptionPane.showInputDialog(this, "Enter new group name: ");
        group.setName(groupName);
        try {
            ChatClient client = new ChatClient();
            if(client.requestEditGroup(group)){
                JOptionPane.showMessageDialog(this, "Edit group name suceedfully");
                showTableGroup(user.getId());
            }
            else{
                JOptionPane.showMessageDialog(this, "Something went wrong", "Error", 2);
            }
            client.close();
        } catch (IOException ex) {
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditGroupActionPerformed

    private void btnEditMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditMemberActionPerformed
        int row = tblGroup.getSelectedRow();
        Group group = listGroup.get(row);
        EditMemberForm emv = new EditMemberForm();
        emv.setVisible(true);
        emv.setUser(user);
        emv.group=group;
        try {
            emv.showTableMember(group);
        } catch (IOException | ClassNotFoundException ex) {
        }
    }//GEN-LAST:event_btnEditMemberActionPerformed

    private void btnSendFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendFileActionPerformed
        File[] file = new File[1];
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Choose a file:");
        if(fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
            file[0] = fc.getSelectedFile();
            String path = file[0].getAbsolutePath();
            try {
                FileInputStream fis = new FileInputStream(new File(path));
                byte[] content = new byte[(int)file[0].length()];
                fis.read(content);
                Message mess = new Message();
                mess.setFileName(file[0].getName());
                mess.setFileContent(content);
                mess.setGroupID(groupID);
                mess.setUserID(user.getId());
                ChatClient client = new ChatClient();
                client.requestSendFile(mess);
                showTableMessage();
                client.close();
            } catch (IOException e) {
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSendFileActionPerformed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
    }//GEN-LAST:event_formKeyTyped

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        try {
            showTableGroup(user.getId());
            deleteContentTableMessage();
        } catch (IOException ex) {
            Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_formMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new HomeForm().setVisible(true);
                } catch (IOException | ClassNotFoundException ex) {
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateGroup;
    private javax.swing.JButton btnDeleteGroup;
    private javax.swing.JButton btnDeleteMessage;
    private javax.swing.JButton btnEditGroup;
    private javax.swing.JButton btnEditMember;
    private javax.swing.JButton btnEditMessage;
    private javax.swing.JButton btnPersonInfo;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnSendFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblGroup;
    private javax.swing.JTable tblMessage;
    private javax.swing.JTextField txtContent;
    // End of variables declaration//GEN-END:variables
}
